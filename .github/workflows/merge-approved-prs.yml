name: Merge Pull Requests

on:
  workflow_dispatch:
    inputs:
      pr_number:
      
  pull_request:
    types: [approved]

jobs:
  merge-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract PR number
        id: extract-pr
        run: |
          # Extract PR number from GITHUB_REF_NAME
          PR_NUMBER=$(echo $GITHUB_REF_NAME | cut -d'/' -f1)
          
          # Check if PR_NUMBER is a valid number
          if [[ "$PR_NUMBER" =~ ^[0-9]+$ ]]; then
            echo "Extracted PR_NUMBER is valid: $PR_NUMBER"
          else
            echo "Extracted PR_NUMBER is not valid, using input PR number."
            PR_NUMBER=${{ github.event.inputs.pr_number }}
          fi
      
          # Set PR_NUMBER to environment variable
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          
      - name: Get approval status
        uses: actions/github-script@v6
        with:
          script: |
            console.log(process.env)
            console.log('github.............', ${{ github }})
            
            const pull_number = process.env.PR_NUMBER
            if (!pull_number) {
              throw new Error('Pull request number is not available');
            }
            
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number
            });
      
            const approvedReviews = reviews.filter(review => review.state === 'APPROVED');
            console.log('Approved reviews:', approvedReviews);
      
            core.setOutput('approved', approvedReviews.length > 0);

      - name: Merge PR if approved
        if: ${{ steps.get-approval-status.outputs.approved >= steps.get-branch-protection.outputs.required_approvals }}
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git checkout ${{ github.head_ref || github.event.pull_request.head.ref }}
          git merge ${{ github.event.pull_request.base.ref }} -m "Automated merge of #${{ github.event.pull_request.number }}"
  
      - name: Push merged changes
        if: ${{ steps.get-approval-status.outputs.approved >= steps.get-branch-protection.outputs.required_approvals }}
        run: |
          git push origin HEAD:${{ github.head_ref || github.event.pull_request.head.ref }}
